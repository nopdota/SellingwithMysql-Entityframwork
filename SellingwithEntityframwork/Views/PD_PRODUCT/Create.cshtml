@model SellingwithEntityframwork.Models.pd_product

@{
    ViewBag.Title = "Create";
}

<h2>หน้าเพิ่มสินค้า</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div style="display:none">  @*เดี๋ยวไปเพิ่ม PD_ID เองใน Controller ใส่ค่า defult เอาไว้ใน EditorFor =1  *@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PD_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PD_ID, new { htmlAttributes = new { @class = "form-control"  } })
                    @Html.ValidationMessageFor(model => model.PD_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PD_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PD_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PD_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PD_VALUE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PD_VALUE, new { htmlAttributes = new { @class = "form-control" ,@type = "number" } })
                @Html.ValidationMessageFor(model => model.PD_VALUE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PD_PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PD_PRICE, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.PD_PRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{
                IEnumerable<SellingwithEntityframwork.Models.pd_type> items = (IEnumerable<SellingwithEntityframwork.Models.pd_type>)ViewData["listTYPE"];
            }

            @Html.LabelFor(model => model.TP_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.TP_ID, new SelectList(items.Select(x => new { TP_ID = x.TP_ID, TP_NAME = (x.TP_ID + " " + x.TP_NAME) }).ToList(), "TP_ID", "TP_NAME"), "กรุณาเลือกประเภทสินค้า" ,new {  @class = "form-control col-md-2" })
                @Html.ValidationMessageFor(model => model.TP_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PD_UNIT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PD_UNIT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PD_UNIT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
