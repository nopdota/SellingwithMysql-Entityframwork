@model SellingwithEntityframwork.Models.pd_product

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>แก้ไข</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PD_ID)
    <div class="form-group">
        @Html.LabelFor(model => model.PD_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PD_ID, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.PD_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PD_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PD_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PD_NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PD_VALUE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PD_VALUE, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.PD_VALUE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PD_PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PD_PRICE, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.PD_PRICE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TP_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            IEnumerable<SellingwithEntityframwork.Models.pd_type> items = (IEnumerable<SellingwithEntityframwork.Models.pd_type>)ViewData["listTYPE"];
        }
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TP_ID, new SelectList(items.Select(x => new { TP_ID = x.TP_ID, TP_NAME = (x.TP_ID + " " + x.TP_NAME) }).ToList(), "TP_ID", "TP_NAME"), "กรุณาเลือกประเภทสินค้า", new { @class = "form-control col-md-2" })
            @Html.ValidationMessageFor(model => model.TP_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PD_UNIT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PD_UNIT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PD_UNIT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
